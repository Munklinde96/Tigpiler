49 shift/reduce conflicts
1 rule not reduced

warning: rule <error : > will never be reduced
error:  state 51: shift/reduce conflict (shift OR, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift AND, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift GE, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift GT, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift LE, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift LT, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift NEQ, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift EQ, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift DIVIDE, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift TIMES, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift MINUS, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift PLUS, reduce by rule 24)
error:  state 86: shift/reduce conflict (shift OR, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift AND, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift GE, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift GT, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift LE, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift LT, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift NEQ, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift EQ, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift DIVIDE, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift TIMES, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift MINUS, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift PLUS, reduce by rule 26)
error:  state 87: shift/reduce conflict (shift ELSE, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift OR, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift AND, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift GE, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift GT, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift LE, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift LT, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift NEQ, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift EQ, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift DIVIDE, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift TIMES, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift MINUS, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift PLUS, reduce by rule 31)
error:  state 124: shift/reduce conflict (shift OR, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift AND, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift GE, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift GT, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift LE, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift LT, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift NEQ, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift EQ, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift DIVIDE, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift TIMES, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift MINUS, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift PLUS, reduce by rule 27)

state 0:

	program : . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 9
	program	goto 134
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 1:

	exp : sequence .  (reduce by rule 9)



	.	reduce by rule 9


state 2:

	exp : assignment .  (reduce by rule 7)



	.	reduce by rule 7


state 3:

	exp : control .  (reduce by rule 8)



	.	reduce by rule 8


state 4:

	exp : functionCall .  (reduce by rule 2)



	.	reduce by rule 2


state 5:

	exp : mathexp .  (reduce by rule 4)



	.	reduce by rule 4


state 6:

	exp : compexp .  (reduce by rule 5)



	.	reduce by rule 5


state 7:

	exp : boolexp .  (reduce by rule 6)



	.	reduce by rule 6


state 8:

	exp : lvalue .  (reduce by rule 3)
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 
	assignment : lvalue . ASSIGN exp 

	LBRACK	shift 23
	DOT	shift 22
	ASSIGN	shift 21


	.	reduce by rule 3


state 9:

	program : exp .  (reduce by rule 0)
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 0


state 10:

	exp : NIL .  (reduce by rule 11)



	.	reduce by rule 11


state 11:

	control : BREAK .  (reduce by rule 28)



	.	reduce by rule 28


state 12:

	control : LET . decs IN sequenceExp END 

	FUNCTION	shift 43
	VAR	shift 42
	TYPE	shift 41

	decs	goto 40
	dec	goto 39
	vardec	goto 38
	fundec	goto 37
	tydec	goto 36

	.	reduce by rule 45


state 13:

	control : FOR . ID EQ exp TO exp DO exp 

	ID	shift 44


	.	error


state 14:

	control : WHILE . exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 45
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 15:

	control : IF . exp THEN exp ifTail 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 46
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 16:

	exp : MINUS . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 47
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 17:

	sequence : LPAREN . sequenceExp RPAREN 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 49
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequenceExp	goto 48
	sequence	goto 1

	.	reduce by rule 16


state 18:

	exp : STRING .  (reduce by rule 13)



	.	reduce by rule 13


state 19:

	exp : INT .  (reduce by rule 12)



	.	reduce by rule 12


state 20:

	lvalue : ID .  (reduce by rule 61)
	functionCall : ID . LPAREN functionParam RPAREN 

	LPAREN	shift 50


	.	reduce by rule 61


state 21:

	assignment : lvalue ASSIGN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 51
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 22:

	lvalue : lvalue DOT . ID 

	ID	shift 52


	.	error


state 23:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 53
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 24:

	boolexp : exp OR . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 54
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 25:

	boolexp : exp AND . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 55
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 26:

	compexp : exp GE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 56
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 27:

	compexp : exp GT . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 57
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 28:

	compexp : exp LE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 58
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 29:

	compexp : exp LT . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 59
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 30:

	compexp : exp NEQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 60
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 31:

	compexp : exp EQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 61
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 32:

	mathexp : exp DIVIDE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 62
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 33:

	mathexp : exp TIMES . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 63
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 34:

	mathexp : exp MINUS . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 64
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 35:

	mathexp : exp PLUS . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 65
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 36:

	dec : tydec .  (reduce by rule 46)



	.	reduce by rule 46


state 37:

	dec : fundec .  (reduce by rule 48)



	.	reduce by rule 48


state 38:

	dec : vardec .  (reduce by rule 47)



	.	reduce by rule 47


state 39:

	decs : dec . decs 

	FUNCTION	shift 43
	VAR	shift 42
	TYPE	shift 41

	decs	goto 66
	dec	goto 39
	vardec	goto 38
	fundec	goto 37
	tydec	goto 36

	.	reduce by rule 45


state 40:

	control : LET decs . IN sequenceExp END 

	IN	shift 67


	.	error


state 41:

	tydec : TYPE . ID EQ ty 

	ID	shift 68


	.	error


state 42:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 69


	.	error


state 43:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 70


	.	error


state 44:

	control : FOR ID . EQ exp TO exp DO exp 

	EQ	shift 71


	.	error


state 45:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : WHILE exp . DO exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	DO	shift 72


	.	error


state 46:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : IF exp . THEN exp ifTail 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	THEN	shift 73


	.	error


state 47:

	exp : MINUS exp .  (reduce by rule 10)
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 



	.	reduce by rule 10


state 48:

	sequence : LPAREN sequenceExp . RPAREN 

	RPAREN	shift 74


	.	error


state 49:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	sequenceExp : exp . sequenceTail 

	SEMICOLON	shift 76
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24

	sequenceTail	goto 75

	.	reduce by rule 18


state 50:

	functionCall : ID LPAREN . functionParam RPAREN 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 78
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	functionParam	goto 77
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	reduce by rule 21

error:  state 51: shift/reduce conflict (shift OR, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift AND, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift GE, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift GT, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift LE, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift LT, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift NEQ, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift EQ, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift DIVIDE, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift TIMES, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift MINUS, reduce by rule 24)
error:  state 51: shift/reduce conflict (shift PLUS, reduce by rule 24)

state 51:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	assignment : lvalue ASSIGN exp .  (reduce by rule 24)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 24


state 52:

	lvalue : lvalue DOT ID .  (reduce by rule 62)



	.	reduce by rule 62


state 53:

	lvalue : lvalue LBRACK exp . RBRACK 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	RBRACK	shift 79
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	error


state 54:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	boolexp : exp OR exp .  (reduce by rule 43)
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25


	.	reduce by rule 43


state 55:

	boolexp : exp . AND exp 
	boolexp : exp AND exp .  (reduce by rule 42)
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26


	.	reduce by rule 42


state 56:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	compexp : exp GE exp .  (reduce by rule 41)
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	EOF	reduce by rule 41
	COMMA	reduce by rule 41
	SEMICOLON	reduce by rule 41
	RPAREN	reduce by rule 41
	RBRACK	reduce by rule 41
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 41
	OR	reduce by rule 41
	THEN	reduce by rule 41
	ELSE	reduce by rule 41
	TO	reduce by rule 41
	DO	reduce by rule 41
	IN	reduce by rule 41
	END	reduce by rule 41
	FUNCTION	reduce by rule 41
	VAR	reduce by rule 41
	TYPE	reduce by rule 41


	.	error


state 57:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp GT exp .  (reduce by rule 40)
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	EOF	reduce by rule 40
	COMMA	reduce by rule 40
	SEMICOLON	reduce by rule 40
	RPAREN	reduce by rule 40
	RBRACK	reduce by rule 40
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 40
	OR	reduce by rule 40
	THEN	reduce by rule 40
	ELSE	reduce by rule 40
	TO	reduce by rule 40
	DO	reduce by rule 40
	IN	reduce by rule 40
	END	reduce by rule 40
	FUNCTION	reduce by rule 40
	VAR	reduce by rule 40
	TYPE	reduce by rule 40


	.	error


state 58:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp LE exp .  (reduce by rule 39)
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	EOF	reduce by rule 39
	COMMA	reduce by rule 39
	SEMICOLON	reduce by rule 39
	RPAREN	reduce by rule 39
	RBRACK	reduce by rule 39
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 39
	OR	reduce by rule 39
	THEN	reduce by rule 39
	ELSE	reduce by rule 39
	TO	reduce by rule 39
	DO	reduce by rule 39
	IN	reduce by rule 39
	END	reduce by rule 39
	FUNCTION	reduce by rule 39
	VAR	reduce by rule 39
	TYPE	reduce by rule 39


	.	error


state 59:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp LT exp .  (reduce by rule 38)
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	EOF	reduce by rule 38
	COMMA	reduce by rule 38
	SEMICOLON	reduce by rule 38
	RPAREN	reduce by rule 38
	RBRACK	reduce by rule 38
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 38
	OR	reduce by rule 38
	THEN	reduce by rule 38
	ELSE	reduce by rule 38
	TO	reduce by rule 38
	DO	reduce by rule 38
	IN	reduce by rule 38
	END	reduce by rule 38
	FUNCTION	reduce by rule 38
	VAR	reduce by rule 38
	TYPE	reduce by rule 38


	.	error


state 60:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp NEQ exp .  (reduce by rule 37)
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	EOF	reduce by rule 37
	COMMA	reduce by rule 37
	SEMICOLON	reduce by rule 37
	RPAREN	reduce by rule 37
	RBRACK	reduce by rule 37
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 37
	OR	reduce by rule 37
	THEN	reduce by rule 37
	ELSE	reduce by rule 37
	TO	reduce by rule 37
	DO	reduce by rule 37
	IN	reduce by rule 37
	END	reduce by rule 37
	FUNCTION	reduce by rule 37
	VAR	reduce by rule 37
	TYPE	reduce by rule 37


	.	error


state 61:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp EQ exp .  (reduce by rule 36)
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	EOF	reduce by rule 36
	COMMA	reduce by rule 36
	SEMICOLON	reduce by rule 36
	RPAREN	reduce by rule 36
	RBRACK	reduce by rule 36
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 36
	OR	reduce by rule 36
	THEN	reduce by rule 36
	ELSE	reduce by rule 36
	TO	reduce by rule 36
	DO	reduce by rule 36
	IN	reduce by rule 36
	END	reduce by rule 36
	FUNCTION	reduce by rule 36
	VAR	reduce by rule 36
	TYPE	reduce by rule 36


	.	error


state 62:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	mathexp : exp DIVIDE exp .  (reduce by rule 35)



	.	reduce by rule 35


state 63:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp TIMES exp .  (reduce by rule 34)
	mathexp : exp . DIVIDE exp 



	.	reduce by rule 34


state 64:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp MINUS exp .  (reduce by rule 33)
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	TIMES	shift 33
	DIVIDE	shift 32


	.	reduce by rule 33


state 65:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp PLUS exp .  (reduce by rule 32)
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	TIMES	shift 33
	DIVIDE	shift 32


	.	reduce by rule 32


state 66:

	decs : dec decs .  (reduce by rule 44)



	.	reduce by rule 44


state 67:

	control : LET decs IN . sequenceExp END 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 49
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequenceExp	goto 80
	sequence	goto 1

	.	reduce by rule 16


state 68:

	tydec : TYPE ID . EQ ty 

	EQ	shift 81


	.	error


state 69:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 83
	ASSIGN	shift 82


	.	error


state 70:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 84


	.	error


state 71:

	control : FOR ID EQ . exp TO exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 85
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 72:

	control : WHILE exp DO . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 86
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 73:

	control : IF exp THEN . exp ifTail 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 87
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 74:

	sequence : LPAREN sequenceExp RPAREN .  (reduce by rule 14)



	.	reduce by rule 14


state 75:

	sequenceExp : exp sequenceTail .  (reduce by rule 15)



	.	reduce by rule 15


state 76:

	sequenceTail : SEMICOLON . exp sequenceTail 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 88
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 77:

	functionCall : ID LPAREN functionParam . RPAREN 

	RPAREN	shift 89


	.	error


state 78:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	functionParam : exp . functionParamTail 

	COMMA	shift 91
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24

	functionParamTail	goto 90

	.	reduce by rule 23


state 79:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 63)



	.	reduce by rule 63


state 80:

	control : LET decs IN sequenceExp . END 

	END	shift 92


	.	error


state 81:

	tydec : TYPE ID EQ . ty 

	ID	shift 96
	LBRACE	shift 95
	ARRAY	shift 94

	ty	goto 93

	.	error


state 82:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 97
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 83:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 98


	.	error


state 84:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 100

	tyfields	goto 99

	.	reduce by rule 54


state 85:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : FOR ID EQ exp . TO exp DO exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	TO	shift 101


	.	error

error:  state 86: shift/reduce conflict (shift OR, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift AND, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift GE, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift GT, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift LE, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift LT, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift NEQ, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift EQ, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift DIVIDE, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift TIMES, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift MINUS, reduce by rule 26)
error:  state 86: shift/reduce conflict (shift PLUS, reduce by rule 26)

state 86:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : WHILE exp DO exp .  (reduce by rule 26)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 26

error:  state 87: shift/reduce conflict (shift ELSE, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift OR, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift AND, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift GE, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift GT, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift LE, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift LT, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift NEQ, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift EQ, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift DIVIDE, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift TIMES, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift MINUS, reduce by rule 31)
error:  state 87: shift/reduce conflict (shift PLUS, reduce by rule 31)

state 87:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : IF exp THEN exp . ifTail 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	ELSE	shift 103

	ifTail	goto 102

	.	reduce by rule 31


state 88:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	sequenceTail : SEMICOLON exp . sequenceTail 

	SEMICOLON	shift 76
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24

	sequenceTail	goto 104

	.	reduce by rule 18


state 89:

	functionCall : ID LPAREN functionParam RPAREN .  (reduce by rule 19)



	.	reduce by rule 19


state 90:

	functionParam : exp functionParamTail .  (reduce by rule 20)



	.	reduce by rule 20


state 91:

	functionParamTail : COMMA . exp functionParamTail 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 105
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 92:

	control : LET decs IN sequenceExp END .  (reduce by rule 29)



	.	reduce by rule 29


state 93:

	tydec : TYPE ID EQ ty .  (reduce by rule 49)



	.	reduce by rule 49


state 94:

	ty : ARRAY . OF ID 

	OF	shift 106


	.	error


state 95:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 100

	tyfields	goto 107

	.	reduce by rule 54


state 96:

	ty : ID .  (reduce by rule 50)



	.	reduce by rule 50


state 97:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 57)
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 57


state 98:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 108


	.	error


state 99:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 109


	.	error


state 100:

	tyfields : ID . COLON ID LBRACE tyfieldsTail 

	COLON	shift 110


	.	error


state 101:

	control : FOR ID EQ exp TO . exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 111
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 102:

	control : IF exp THEN exp ifTail .  (reduce by rule 25)



	.	reduce by rule 25


state 103:

	ifTail : ELSE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 112
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 104:

	sequenceTail : SEMICOLON exp sequenceTail .  (reduce by rule 17)



	.	reduce by rule 17


state 105:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	functionParamTail : COMMA exp . functionParamTail 

	COMMA	shift 91
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24

	functionParamTail	goto 113

	.	reduce by rule 23


state 106:

	ty : ARRAY OF . ID 

	ID	shift 114


	.	error


state 107:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 115


	.	error


state 108:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 116
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 109:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 118
	EQ	shift 117


	.	error


state 110:

	tyfields : ID COLON . ID LBRACE tyfieldsTail 

	ID	shift 119


	.	error


state 111:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : FOR ID EQ exp TO exp . DO exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	DO	shift 120


	.	error


state 112:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	ifTail : ELSE exp .  (reduce by rule 30)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 30


state 113:

	functionParamTail : COMMA exp functionParamTail .  (reduce by rule 22)



	.	reduce by rule 22


state 114:

	ty : ARRAY OF ID .  (reduce by rule 52)



	.	reduce by rule 52


state 115:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 51)



	.	reduce by rule 51


state 116:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 58)
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 58


state 117:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 121
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 118:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 122


	.	error


state 119:

	tyfields : ID COLON ID . LBRACE tyfieldsTail 

	LBRACE	shift 123


	.	error


state 120:

	control : FOR ID EQ exp TO exp DO . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 124
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 121:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 59)
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 59


state 122:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 125


	.	error


state 123:

	tyfields : ID COLON ID LBRACE . tyfieldsTail 

	COMMA	shift 127

	tyfieldsTail	goto 126

	.	reduce by rule 56

error:  state 124: shift/reduce conflict (shift OR, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift AND, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift GE, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift GT, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift LE, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift LT, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift NEQ, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift EQ, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift DIVIDE, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift TIMES, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift MINUS, reduce by rule 27)
error:  state 124: shift/reduce conflict (shift PLUS, reduce by rule 27)

state 124:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : FOR ID EQ exp TO exp DO exp .  (reduce by rule 27)

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 27


state 125:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 128
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 126:

	tyfields : ID COLON ID LBRACE tyfieldsTail .  (reduce by rule 53)



	.	reduce by rule 53


state 127:

	tyfieldsTail : COMMA . ID COLON ID RBRACE tyfieldsTail 

	ID	shift 129


	.	error


state 128:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 60)
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 60


state 129:

	tyfieldsTail : COMMA ID . COLON ID RBRACE tyfieldsTail 

	COLON	shift 130


	.	error


state 130:

	tyfieldsTail : COMMA ID COLON . ID RBRACE tyfieldsTail 

	ID	shift 131


	.	error


state 131:

	tyfieldsTail : COMMA ID COLON ID . RBRACE tyfieldsTail 

	RBRACE	shift 132


	.	error


state 132:

	tyfieldsTail : COMMA ID COLON ID RBRACE . tyfieldsTail 

	COMMA	shift 127

	tyfieldsTail	goto 133

	.	reduce by rule 56


state 133:

	tyfieldsTail : COMMA ID COLON ID RBRACE tyfieldsTail .  (reduce by rule 55)



	.	reduce by rule 55


state 134:


	EOF	accept


	.	error

434 of 930 action table entries left after compaction
321 goto table entries
