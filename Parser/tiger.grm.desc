1 rule not reduced

warning: rule <error : > will never be reduced

state 0:

	program : . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 10
	program	goto 139
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 1:

	exp : array .  (reduce by rule 10)



	.	reduce by rule 10


state 2:

	exp : sequence .  (reduce by rule 9)



	.	reduce by rule 9


state 3:

	exp : assignment .  (reduce by rule 7)



	.	reduce by rule 7


state 4:

	exp : control .  (reduce by rule 8)



	.	reduce by rule 8


state 5:

	exp : functionCall .  (reduce by rule 2)



	.	reduce by rule 2


state 6:

	exp : mathexp .  (reduce by rule 4)



	.	reduce by rule 4


state 7:

	exp : compexp .  (reduce by rule 5)



	.	reduce by rule 5


state 8:

	exp : boolexp .  (reduce by rule 6)



	.	reduce by rule 6


state 9:

	exp : lvalue .  (reduce by rule 3)
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 
	assignment : lvalue . ASSIGN exp 

	LBRACK	shift 24
	DOT	shift 23
	ASSIGN	shift 22


	.	reduce by rule 3


state 10:

	program : exp .  (reduce by rule 0)
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25


	.	reduce by rule 0


state 11:

	exp : NIL .  (reduce by rule 12)



	.	reduce by rule 12


state 12:

	control : BREAK .  (reduce by rule 31)



	.	reduce by rule 31


state 13:

	control : LET . decs IN sequenceExp END 

	FUNCTION	shift 44
	VAR	shift 43
	TYPE	shift 42

	decs	goto 41
	dec	goto 40
	vardec	goto 39
	fundec	goto 38
	tydec	goto 37

	.	reduce by rule 46


state 14:

	control : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 45


	.	error


state 15:

	control : WHILE . exp DO exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 46
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 16:

	control : IF . exp THEN exp 
	control : IF . exp THEN exp ELSE exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 47
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 17:

	exp : MINUS . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 48
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 18:

	sequence : LPAREN . sequenceExp RPAREN 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 50
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequenceExp	goto 49
	sequence	goto 2
	array	goto 1

	.	reduce by rule 18


state 19:

	exp : STRING .  (reduce by rule 14)



	.	reduce by rule 14


state 20:

	exp : INT .  (reduce by rule 13)



	.	reduce by rule 13


state 21:

	lvalue : ID .  (reduce by rule 62)
	functionCall : ID . LPAREN functionParam RPAREN 
	array : ID . LBRACK exp RBRACK OF exp 

	LPAREN	shift 52
	LBRACK	shift 51


	.	reduce by rule 62


state 22:

	assignment : lvalue ASSIGN . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 53
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 23:

	lvalue : lvalue DOT . ID 

	ID	shift 54


	.	error


state 24:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 55
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 25:

	boolexp : exp OR . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 56
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 26:

	boolexp : exp AND . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 57
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 27:

	compexp : exp GE . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 58
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 28:

	compexp : exp GT . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 59
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 29:

	compexp : exp LE . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 60
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 30:

	compexp : exp LT . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 61
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 31:

	compexp : exp NEQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 62
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 32:

	compexp : exp EQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 63
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 33:

	mathexp : exp DIVIDE . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 64
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 34:

	mathexp : exp TIMES . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 65
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 35:

	mathexp : exp MINUS . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 66
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 36:

	mathexp : exp PLUS . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 67
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 37:

	dec : tydec .  (reduce by rule 47)



	.	reduce by rule 47


state 38:

	dec : fundec .  (reduce by rule 49)



	.	reduce by rule 49


state 39:

	dec : vardec .  (reduce by rule 48)



	.	reduce by rule 48


state 40:

	decs : dec . decs 

	FUNCTION	shift 44
	VAR	shift 43
	TYPE	shift 42

	decs	goto 68
	dec	goto 40
	vardec	goto 39
	fundec	goto 38
	tydec	goto 37

	.	reduce by rule 46


state 41:

	control : LET decs . IN sequenceExp END 

	IN	shift 69


	.	error


state 42:

	tydec : TYPE . ID EQ ty 

	ID	shift 70


	.	error


state 43:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 71


	.	error


state 44:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 72


	.	error


state 45:

	control : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 73


	.	error


state 46:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : WHILE exp . DO exp 

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25
	DO	shift 74


	.	error


state 47:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : IF exp . THEN exp 
	control : IF exp . THEN exp ELSE exp 

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25
	THEN	shift 75


	.	error


state 48:

	exp : MINUS exp .  (reduce by rule 11)
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 



	.	reduce by rule 11


state 49:

	sequence : LPAREN sequenceExp . RPAREN 

	RPAREN	shift 76


	.	error


state 50:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	sequenceExp : exp . sequenceTail 

	SEMICOLON	shift 78
	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25

	sequenceTail	goto 77

	.	reduce by rule 20


state 51:

	array : ID LBRACK . exp RBRACK OF exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 79
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 52:

	functionCall : ID LPAREN . functionParam RPAREN 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 81
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	functionParam	goto 80
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	reduce by rule 23


state 53:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	assignment : lvalue ASSIGN exp .  (reduce by rule 26)

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25


	.	reduce by rule 26


state 54:

	lvalue : lvalue DOT ID .  (reduce by rule 63)



	.	reduce by rule 63


state 55:

	lvalue : lvalue LBRACK exp . RBRACK 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	RBRACK	shift 82
	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25


	.	error


state 56:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	boolexp : exp OR exp .  (reduce by rule 44)
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26


	.	reduce by rule 44


state 57:

	boolexp : exp . AND exp 
	boolexp : exp AND exp .  (reduce by rule 43)
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27


	.	reduce by rule 43


state 58:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	compexp : exp GE exp .  (reduce by rule 42)
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	EOF	reduce by rule 42
	COMMA	reduce by rule 42
	SEMICOLON	reduce by rule 42
	RPAREN	reduce by rule 42
	RBRACK	reduce by rule 42
	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	AND	reduce by rule 42
	OR	reduce by rule 42
	THEN	reduce by rule 42
	ELSE	reduce by rule 42
	TO	reduce by rule 42
	DO	reduce by rule 42
	IN	reduce by rule 42
	END	reduce by rule 42
	FUNCTION	reduce by rule 42
	VAR	reduce by rule 42
	TYPE	reduce by rule 42


	.	error


state 59:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp GT exp .  (reduce by rule 41)
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	EOF	reduce by rule 41
	COMMA	reduce by rule 41
	SEMICOLON	reduce by rule 41
	RPAREN	reduce by rule 41
	RBRACK	reduce by rule 41
	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	AND	reduce by rule 41
	OR	reduce by rule 41
	THEN	reduce by rule 41
	ELSE	reduce by rule 41
	TO	reduce by rule 41
	DO	reduce by rule 41
	IN	reduce by rule 41
	END	reduce by rule 41
	FUNCTION	reduce by rule 41
	VAR	reduce by rule 41
	TYPE	reduce by rule 41


	.	error


state 60:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp LE exp .  (reduce by rule 40)
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	EOF	reduce by rule 40
	COMMA	reduce by rule 40
	SEMICOLON	reduce by rule 40
	RPAREN	reduce by rule 40
	RBRACK	reduce by rule 40
	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	AND	reduce by rule 40
	OR	reduce by rule 40
	THEN	reduce by rule 40
	ELSE	reduce by rule 40
	TO	reduce by rule 40
	DO	reduce by rule 40
	IN	reduce by rule 40
	END	reduce by rule 40
	FUNCTION	reduce by rule 40
	VAR	reduce by rule 40
	TYPE	reduce by rule 40


	.	error


state 61:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp LT exp .  (reduce by rule 39)
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	EOF	reduce by rule 39
	COMMA	reduce by rule 39
	SEMICOLON	reduce by rule 39
	RPAREN	reduce by rule 39
	RBRACK	reduce by rule 39
	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	AND	reduce by rule 39
	OR	reduce by rule 39
	THEN	reduce by rule 39
	ELSE	reduce by rule 39
	TO	reduce by rule 39
	DO	reduce by rule 39
	IN	reduce by rule 39
	END	reduce by rule 39
	FUNCTION	reduce by rule 39
	VAR	reduce by rule 39
	TYPE	reduce by rule 39


	.	error


state 62:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp NEQ exp .  (reduce by rule 38)
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	EOF	reduce by rule 38
	COMMA	reduce by rule 38
	SEMICOLON	reduce by rule 38
	RPAREN	reduce by rule 38
	RBRACK	reduce by rule 38
	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	AND	reduce by rule 38
	OR	reduce by rule 38
	THEN	reduce by rule 38
	ELSE	reduce by rule 38
	TO	reduce by rule 38
	DO	reduce by rule 38
	IN	reduce by rule 38
	END	reduce by rule 38
	FUNCTION	reduce by rule 38
	VAR	reduce by rule 38
	TYPE	reduce by rule 38


	.	error


state 63:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp EQ exp .  (reduce by rule 37)
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	EOF	reduce by rule 37
	COMMA	reduce by rule 37
	SEMICOLON	reduce by rule 37
	RPAREN	reduce by rule 37
	RBRACK	reduce by rule 37
	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	AND	reduce by rule 37
	OR	reduce by rule 37
	THEN	reduce by rule 37
	ELSE	reduce by rule 37
	TO	reduce by rule 37
	DO	reduce by rule 37
	IN	reduce by rule 37
	END	reduce by rule 37
	FUNCTION	reduce by rule 37
	VAR	reduce by rule 37
	TYPE	reduce by rule 37


	.	error


state 64:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	mathexp : exp DIVIDE exp .  (reduce by rule 36)



	.	reduce by rule 36


state 65:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp TIMES exp .  (reduce by rule 35)
	mathexp : exp . DIVIDE exp 



	.	reduce by rule 35


state 66:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp MINUS exp .  (reduce by rule 34)
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	TIMES	shift 34
	DIVIDE	shift 33


	.	reduce by rule 34


state 67:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp PLUS exp .  (reduce by rule 33)
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	TIMES	shift 34
	DIVIDE	shift 33


	.	reduce by rule 33


state 68:

	decs : dec decs .  (reduce by rule 45)



	.	reduce by rule 45


state 69:

	control : LET decs IN . sequenceExp END 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 50
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequenceExp	goto 83
	sequence	goto 2
	array	goto 1

	.	reduce by rule 18


state 70:

	tydec : TYPE ID . EQ ty 

	EQ	shift 84


	.	error


state 71:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 86
	ASSIGN	shift 85


	.	error


state 72:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 87


	.	error


state 73:

	control : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 88
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 74:

	control : WHILE exp DO . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 89
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 75:

	control : IF exp THEN . exp 
	control : IF exp THEN . exp ELSE exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 90
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 76:

	sequence : LPAREN sequenceExp RPAREN .  (reduce by rule 16)



	.	reduce by rule 16


state 77:

	sequenceExp : exp sequenceTail .  (reduce by rule 17)



	.	reduce by rule 17


state 78:

	sequenceTail : SEMICOLON . exp sequenceTail 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 91
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 79:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	array : ID LBRACK exp . RBRACK OF exp 

	RBRACK	shift 92
	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25


	.	error


state 80:

	functionCall : ID LPAREN functionParam . RPAREN 

	RPAREN	shift 93


	.	error


state 81:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	functionParam : exp . functionParamTail 

	COMMA	shift 95
	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25

	functionParamTail	goto 94

	.	reduce by rule 25


state 82:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 64)



	.	reduce by rule 64


state 83:

	control : LET decs IN sequenceExp . END 

	END	shift 96


	.	error


state 84:

	tydec : TYPE ID EQ . ty 

	ID	shift 100
	LBRACE	shift 99
	ARRAY	shift 98

	ty	goto 97

	.	error


state 85:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 101
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 86:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 102


	.	error


state 87:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 104

	tyfields	goto 103

	.	reduce by rule 55


state 88:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25
	TO	shift 105


	.	error


state 89:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : WHILE exp DO exp .  (reduce by rule 29)

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25


	.	reduce by rule 29


state 90:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : IF exp THEN exp .  (reduce by rule 27)
	control : IF exp THEN exp . ELSE exp 

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25
	ELSE	shift 106


	.	reduce by rule 27


state 91:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	sequenceTail : SEMICOLON exp . sequenceTail 

	SEMICOLON	shift 78
	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25

	sequenceTail	goto 107

	.	reduce by rule 20


state 92:

	array : ID LBRACK exp RBRACK . OF exp 

	OF	shift 108


	.	error


state 93:

	functionCall : ID LPAREN functionParam RPAREN .  (reduce by rule 21)



	.	reduce by rule 21


state 94:

	functionParam : exp functionParamTail .  (reduce by rule 22)



	.	reduce by rule 22


state 95:

	functionParamTail : COMMA . exp functionParamTail 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 109
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 96:

	control : LET decs IN sequenceExp END .  (reduce by rule 32)



	.	reduce by rule 32


state 97:

	tydec : TYPE ID EQ ty .  (reduce by rule 50)



	.	reduce by rule 50


state 98:

	ty : ARRAY . OF ID 

	OF	shift 110


	.	error


state 99:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 104

	tyfields	goto 111

	.	reduce by rule 55


state 100:

	ty : ID .  (reduce by rule 51)



	.	reduce by rule 51


state 101:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 58)
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25


	.	reduce by rule 58


state 102:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 112


	.	error


state 103:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 113


	.	error


state 104:

	tyfields : ID . COLON ID LBRACE tyfieldsTail 

	COLON	shift 114


	.	error


state 105:

	control : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 115
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 106:

	control : IF exp THEN exp ELSE . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 116
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 107:

	sequenceTail : SEMICOLON exp sequenceTail .  (reduce by rule 19)



	.	reduce by rule 19


state 108:

	array : ID LBRACK exp RBRACK OF . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 117
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 109:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	functionParamTail : COMMA exp . functionParamTail 

	COMMA	shift 95
	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25

	functionParamTail	goto 118

	.	reduce by rule 25


state 110:

	ty : ARRAY OF . ID 

	ID	shift 119


	.	error


state 111:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 120


	.	error


state 112:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 121
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 113:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 123
	EQ	shift 122


	.	error


state 114:

	tyfields : ID COLON . ID LBRACE tyfieldsTail 

	ID	shift 124


	.	error


state 115:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25
	DO	shift 125


	.	error


state 116:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : IF exp THEN exp ELSE exp .  (reduce by rule 28)

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25


	.	reduce by rule 28


state 117:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	array : ID LBRACK exp RBRACK OF exp .  (reduce by rule 15)

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25


	.	reduce by rule 15


state 118:

	functionParamTail : COMMA exp functionParamTail .  (reduce by rule 24)



	.	reduce by rule 24


state 119:

	ty : ARRAY OF ID .  (reduce by rule 53)



	.	reduce by rule 53


state 120:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 52)



	.	reduce by rule 52


state 121:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 59)
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25


	.	reduce by rule 59


state 122:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 126
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 123:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 127


	.	error


state 124:

	tyfields : ID COLON ID . LBRACE tyfieldsTail 

	LBRACE	shift 128


	.	error


state 125:

	control : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 129
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 126:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 60)
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25


	.	reduce by rule 60


state 127:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 130


	.	error


state 128:

	tyfields : ID COLON ID LBRACE . tyfieldsTail 

	COMMA	shift 132

	tyfieldsTail	goto 131

	.	reduce by rule 57


state 129:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 30)

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25


	.	reduce by rule 30


state 130:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 133
	lvalue	goto 9
	boolexp	goto 8
	compexp	goto 7
	mathexp	goto 6
	functionCall	goto 5
	control	goto 4
	assignment	goto 3
	sequence	goto 2
	array	goto 1

	.	error


state 131:

	tyfields : ID COLON ID LBRACE tyfieldsTail .  (reduce by rule 54)



	.	reduce by rule 54


state 132:

	tyfieldsTail : COMMA . ID COLON ID RBRACE tyfieldsTail 

	ID	shift 134


	.	error


state 133:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 61)
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 36
	MINUS	shift 35
	TIMES	shift 34
	DIVIDE	shift 33
	EQ	shift 32
	NEQ	shift 31
	LT	shift 30
	LE	shift 29
	GT	shift 28
	GE	shift 27
	AND	shift 26
	OR	shift 25


	.	reduce by rule 61


state 134:

	tyfieldsTail : COMMA ID . COLON ID RBRACE tyfieldsTail 

	COLON	shift 135


	.	error


state 135:

	tyfieldsTail : COMMA ID COLON . ID RBRACE tyfieldsTail 

	ID	shift 136


	.	error


state 136:

	tyfieldsTail : COMMA ID COLON ID . RBRACE tyfieldsTail 

	RBRACE	shift 137


	.	error


state 137:

	tyfieldsTail : COMMA ID COLON ID RBRACE . tyfieldsTail 

	COMMA	shift 132

	tyfieldsTail	goto 138

	.	reduce by rule 57


state 138:

	tyfieldsTail : COMMA ID COLON ID RBRACE tyfieldsTail .  (reduce by rule 56)



	.	reduce by rule 56


state 139:


	EOF	accept


	.	error

461 of 984 action table entries left after compaction
373 goto table entries
