49 shift/reduce conflicts
1 rule not reduced

warning: rule <error : > will never be reduced
error:  state 84: shift/reduce conflict (shift OR, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift AND, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift GE, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift GT, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift LE, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift LT, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift NEQ, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift EQ, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift DIVIDE, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift TIMES, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift MINUS, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift PLUS, reduce by rule 26)
error:  state 85: shift/reduce conflict (shift ELSE, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift OR, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift AND, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift GE, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift GT, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift LE, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift LT, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift NEQ, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift EQ, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift DIVIDE, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift TIMES, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift MINUS, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift PLUS, reduce by rule 25)
error:  state 109: shift/reduce conflict (shift OR, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift AND, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift GE, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift GT, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift LE, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift LT, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift NEQ, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift EQ, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift DIVIDE, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift TIMES, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift MINUS, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift PLUS, reduce by rule 24)
error:  state 121: shift/reduce conflict (shift OR, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift AND, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift GE, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift GT, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift LE, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift LT, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift NEQ, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift EQ, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift DIVIDE, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift TIMES, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift MINUS, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift PLUS, reduce by rule 27)

state 0:

	program : . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 9
	program	goto 131
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 1:

	exp : sequence .  (reduce by rule 8)



	.	reduce by rule 8


state 2:

	control : assignment .  (reduce by rule 23)



	.	reduce by rule 23


state 3:

	exp : control .  (reduce by rule 7)



	.	reduce by rule 7


state 4:

	exp : functionCall .  (reduce by rule 2)



	.	reduce by rule 2


state 5:

	exp : mathexp .  (reduce by rule 4)



	.	reduce by rule 4


state 6:

	exp : compexp .  (reduce by rule 5)



	.	reduce by rule 5


state 7:

	exp : boolexp .  (reduce by rule 6)



	.	reduce by rule 6


state 8:

	exp : lvalue .  (reduce by rule 3)
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	LBRACK	shift 22
	DOT	shift 21


	.	reduce by rule 3


state 9:

	program : exp .  (reduce by rule 0)
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 0


state 10:

	exp : NIL .  (reduce by rule 10)



	.	reduce by rule 10


state 11:

	control : BREAK .  (reduce by rule 28)



	.	reduce by rule 28


state 12:

	control : LET . decs IN sequenceExp END 

	FUNCTION	shift 42
	VAR	shift 41
	TYPE	shift 40

	decs	goto 39
	dec	goto 38
	tydec	goto 37
	vardec	goto 36
	fundec	goto 35

	.	reduce by rule 43


state 13:

	control : FOR . ID EQ exp TO exp DO exp 

	ID	shift 43


	.	error


state 14:

	control : WHILE . exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 44
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 15:

	control : IF . exp THEN exp ELSE exp 
	control : IF . exp THEN exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 45
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 16:

	exp : MINUS . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 46
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 17:

	sequence : LPAREN . sequenceExp RPAREN 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 48
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequenceExp	goto 47
	sequence	goto 1

	.	reduce by rule 15


state 18:

	exp : STRING .  (reduce by rule 12)



	.	reduce by rule 12


state 19:

	exp : INT .  (reduce by rule 11)



	.	reduce by rule 11


state 20:

	lvalue : ID .  (reduce by rule 59)
	functionCall : ID . LPAREN functionParam RPAREN 

	LPAREN	shift 49


	.	reduce by rule 59


state 21:

	lvalue : lvalue DOT . ID 

	ID	shift 50


	.	error


state 22:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 51
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 23:

	boolexp : exp OR . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 52
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 24:

	boolexp : exp AND . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 53
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 25:

	compexp : exp GE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 54
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 26:

	compexp : exp GT . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 55
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 27:

	compexp : exp LE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 56
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 28:

	compexp : exp LT . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 57
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 29:

	compexp : exp NEQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 58
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 30:

	compexp : exp EQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 59
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 31:

	mathexp : exp DIVIDE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 60
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 32:

	mathexp : exp TIMES . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 61
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 33:

	mathexp : exp MINUS . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 62
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 34:

	mathexp : exp PLUS . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 63
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 35:

	dec : fundec .  (reduce by rule 46)



	.	reduce by rule 46


state 36:

	dec : vardec .  (reduce by rule 45)



	.	reduce by rule 45


state 37:

	dec : tydec .  (reduce by rule 44)



	.	reduce by rule 44


state 38:

	decs : dec . decs 

	FUNCTION	shift 42
	VAR	shift 41
	TYPE	shift 40

	decs	goto 64
	dec	goto 38
	tydec	goto 37
	vardec	goto 36
	fundec	goto 35

	.	reduce by rule 43


state 39:

	control : LET decs . IN sequenceExp END 

	IN	shift 65


	.	error


state 40:

	tydec : TYPE . ID EQ ty 

	ID	shift 66


	.	error


state 41:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 67


	.	error


state 42:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 68


	.	error


state 43:

	control : FOR ID . EQ exp TO exp DO exp 

	EQ	shift 69


	.	error


state 44:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : WHILE exp . DO exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23
	DO	shift 70


	.	error


state 45:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : IF exp . THEN exp ELSE exp 
	control : IF exp . THEN exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23
	THEN	shift 71


	.	error


state 46:

	exp : MINUS exp .  (reduce by rule 9)
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 



	.	reduce by rule 9


state 47:

	sequence : LPAREN sequenceExp . RPAREN 

	RPAREN	shift 72


	.	error


state 48:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	sequenceExp : exp . sequenceTail 

	SEMICOLON	shift 74
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23

	sequenceTail	goto 73

	.	reduce by rule 17


state 49:

	functionCall : ID LPAREN . functionParam RPAREN 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 76
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	functionParam	goto 75
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	reduce by rule 20


state 50:

	lvalue : lvalue DOT ID .  (reduce by rule 60)



	.	reduce by rule 60


state 51:

	lvalue : lvalue LBRACK exp . RBRACK 
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	RBRACK	shift 77
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	error


state 52:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	boolexp : exp OR exp .  (reduce by rule 41)
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	shift 24


	.	reduce by rule 41


state 53:

	boolexp : exp . AND exp 
	boolexp : exp AND exp .  (reduce by rule 40)
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31


	.	reduce by rule 40


state 54:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	compexp : exp GE exp .  (reduce by rule 39)
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	EOF	reduce by rule 39
	COMMA	reduce by rule 39
	SEMICOLON	reduce by rule 39
	RPAREN	reduce by rule 39
	RBRACK	reduce by rule 39
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	shift 24
	OR	shift 23
	THEN	reduce by rule 39
	ELSE	reduce by rule 39
	TO	reduce by rule 39
	DO	reduce by rule 39
	IN	reduce by rule 39
	END	reduce by rule 39
	FUNCTION	reduce by rule 39
	VAR	reduce by rule 39
	TYPE	reduce by rule 39


	.	error


state 55:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp GT exp .  (reduce by rule 38)
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	EOF	reduce by rule 38
	COMMA	reduce by rule 38
	SEMICOLON	reduce by rule 38
	RPAREN	reduce by rule 38
	RBRACK	reduce by rule 38
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	shift 24
	OR	shift 23
	THEN	reduce by rule 38
	ELSE	reduce by rule 38
	TO	reduce by rule 38
	DO	reduce by rule 38
	IN	reduce by rule 38
	END	reduce by rule 38
	FUNCTION	reduce by rule 38
	VAR	reduce by rule 38
	TYPE	reduce by rule 38


	.	error


state 56:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp LE exp .  (reduce by rule 37)
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	EOF	reduce by rule 37
	COMMA	reduce by rule 37
	SEMICOLON	reduce by rule 37
	RPAREN	reduce by rule 37
	RBRACK	reduce by rule 37
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	shift 24
	OR	shift 23
	THEN	reduce by rule 37
	ELSE	reduce by rule 37
	TO	reduce by rule 37
	DO	reduce by rule 37
	IN	reduce by rule 37
	END	reduce by rule 37
	FUNCTION	reduce by rule 37
	VAR	reduce by rule 37
	TYPE	reduce by rule 37


	.	error


state 57:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp LT exp .  (reduce by rule 36)
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	EOF	reduce by rule 36
	COMMA	reduce by rule 36
	SEMICOLON	reduce by rule 36
	RPAREN	reduce by rule 36
	RBRACK	reduce by rule 36
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	shift 24
	OR	shift 23
	THEN	reduce by rule 36
	ELSE	reduce by rule 36
	TO	reduce by rule 36
	DO	reduce by rule 36
	IN	reduce by rule 36
	END	reduce by rule 36
	FUNCTION	reduce by rule 36
	VAR	reduce by rule 36
	TYPE	reduce by rule 36


	.	error


state 58:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp NEQ exp .  (reduce by rule 35)
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	EOF	reduce by rule 35
	COMMA	reduce by rule 35
	SEMICOLON	reduce by rule 35
	RPAREN	reduce by rule 35
	RBRACK	reduce by rule 35
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	shift 24
	OR	shift 23
	THEN	reduce by rule 35
	ELSE	reduce by rule 35
	TO	reduce by rule 35
	DO	reduce by rule 35
	IN	reduce by rule 35
	END	reduce by rule 35
	FUNCTION	reduce by rule 35
	VAR	reduce by rule 35
	TYPE	reduce by rule 35


	.	error


state 59:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp EQ exp .  (reduce by rule 34)
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	EOF	reduce by rule 34
	COMMA	reduce by rule 34
	SEMICOLON	reduce by rule 34
	RPAREN	reduce by rule 34
	RBRACK	reduce by rule 34
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	AND	shift 24
	OR	shift 23
	THEN	reduce by rule 34
	ELSE	reduce by rule 34
	TO	reduce by rule 34
	DO	reduce by rule 34
	IN	reduce by rule 34
	END	reduce by rule 34
	FUNCTION	reduce by rule 34
	VAR	reduce by rule 34
	TYPE	reduce by rule 34


	.	error


state 60:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	mathexp : exp DIVIDE exp .  (reduce by rule 33)



	.	reduce by rule 33


state 61:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp TIMES exp .  (reduce by rule 32)
	mathexp : exp . DIVIDE exp 



	.	reduce by rule 32


state 62:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp MINUS exp .  (reduce by rule 31)
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	TIMES	shift 32
	DIVIDE	shift 31


	.	reduce by rule 31


state 63:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp PLUS exp .  (reduce by rule 30)
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	TIMES	shift 32
	DIVIDE	shift 31


	.	reduce by rule 30


state 64:

	decs : dec decs .  (reduce by rule 42)



	.	reduce by rule 42


state 65:

	control : LET decs IN . sequenceExp END 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 48
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequenceExp	goto 78
	sequence	goto 1

	.	reduce by rule 15


state 66:

	tydec : TYPE ID . EQ ty 

	EQ	shift 79


	.	error


state 67:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 81
	ASSIGN	shift 80


	.	error


state 68:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 82


	.	error


state 69:

	control : FOR ID EQ . exp TO exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 83
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 70:

	control : WHILE exp DO . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 84
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 71:

	control : IF exp THEN . exp ELSE exp 
	control : IF exp THEN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 85
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 72:

	sequence : LPAREN sequenceExp RPAREN .  (reduce by rule 13)



	.	reduce by rule 13


state 73:

	sequenceExp : exp sequenceTail .  (reduce by rule 14)



	.	reduce by rule 14


state 74:

	sequenceTail : SEMICOLON . exp sequenceTail 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 86
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 75:

	functionCall : ID LPAREN functionParam . RPAREN 

	RPAREN	shift 87


	.	error


state 76:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	functionParam : exp . functionParamTail 

	COMMA	shift 89
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23

	functionParamTail	goto 88

	.	reduce by rule 22


state 77:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 61)



	.	reduce by rule 61


state 78:

	control : LET decs IN sequenceExp . END 

	END	shift 90


	.	error


state 79:

	tydec : TYPE ID EQ . ty 

	ID	shift 94
	LBRACE	shift 93
	ARRAY	shift 92

	ty	goto 91

	.	error


state 80:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 95
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 81:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 96


	.	error


state 82:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 98

	tyfields	goto 97

	.	reduce by rule 52


state 83:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : FOR ID EQ exp . TO exp DO exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23
	TO	shift 99


	.	error

error:  state 84: shift/reduce conflict (shift OR, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift AND, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift GE, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift GT, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift LE, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift LT, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift NEQ, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift EQ, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift DIVIDE, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift TIMES, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift MINUS, reduce by rule 26)
error:  state 84: shift/reduce conflict (shift PLUS, reduce by rule 26)

state 84:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : WHILE exp DO exp .  (reduce by rule 26)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 26

error:  state 85: shift/reduce conflict (shift ELSE, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift OR, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift AND, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift GE, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift GT, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift LE, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift LT, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift NEQ, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift EQ, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift DIVIDE, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift TIMES, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift MINUS, reduce by rule 25)
error:  state 85: shift/reduce conflict (shift PLUS, reduce by rule 25)

state 85:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : IF exp THEN exp . ELSE exp 
	control : IF exp THEN exp .  (reduce by rule 25)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23
	ELSE	shift 100


	.	reduce by rule 25


state 86:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	sequenceTail : SEMICOLON exp . sequenceTail 

	SEMICOLON	shift 74
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23

	sequenceTail	goto 101

	.	reduce by rule 17


state 87:

	functionCall : ID LPAREN functionParam RPAREN .  (reduce by rule 18)



	.	reduce by rule 18


state 88:

	functionParam : exp functionParamTail .  (reduce by rule 19)



	.	reduce by rule 19


state 89:

	functionParamTail : COMMA . exp functionParamTail 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 102
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 90:

	control : LET decs IN sequenceExp END .  (reduce by rule 29)



	.	reduce by rule 29


state 91:

	tydec : TYPE ID EQ ty .  (reduce by rule 47)



	.	reduce by rule 47


state 92:

	ty : ARRAY . OF ID 

	OF	shift 103


	.	error


state 93:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 98

	tyfields	goto 104

	.	reduce by rule 52


state 94:

	ty : ID .  (reduce by rule 48)



	.	reduce by rule 48


state 95:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 55)
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 55


state 96:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 105


	.	error


state 97:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 106


	.	error


state 98:

	tyfields : ID . COLON ID LBRACE tyfieldsTail 

	COLON	shift 107


	.	error


state 99:

	control : FOR ID EQ exp TO . exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 108
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 100:

	control : IF exp THEN exp ELSE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 109
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 101:

	sequenceTail : SEMICOLON exp sequenceTail .  (reduce by rule 16)



	.	reduce by rule 16


state 102:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	functionParamTail : COMMA exp . functionParamTail 

	COMMA	shift 89
	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23

	functionParamTail	goto 110

	.	reduce by rule 22


state 103:

	ty : ARRAY OF . ID 

	ID	shift 111


	.	error


state 104:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 112


	.	error


state 105:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 113
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 106:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 115
	EQ	shift 114


	.	error


state 107:

	tyfields : ID COLON . ID LBRACE tyfieldsTail 

	ID	shift 116


	.	error


state 108:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : FOR ID EQ exp TO exp . DO exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23
	DO	shift 117


	.	error

error:  state 109: shift/reduce conflict (shift OR, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift AND, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift GE, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift GT, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift LE, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift LT, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift NEQ, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift EQ, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift DIVIDE, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift TIMES, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift MINUS, reduce by rule 24)
error:  state 109: shift/reduce conflict (shift PLUS, reduce by rule 24)

state 109:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : IF exp THEN exp ELSE exp .  (reduce by rule 24)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 24


state 110:

	functionParamTail : COMMA exp functionParamTail .  (reduce by rule 21)



	.	reduce by rule 21


state 111:

	ty : ARRAY OF ID .  (reduce by rule 50)



	.	reduce by rule 50


state 112:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 49)



	.	reduce by rule 49


state 113:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 56)
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 56


state 114:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 118
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 115:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 119


	.	error


state 116:

	tyfields : ID COLON ID . LBRACE tyfieldsTail 

	LBRACE	shift 120


	.	error


state 117:

	control : FOR ID EQ exp TO exp DO . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 121
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 118:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 57)
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 57


state 119:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 122


	.	error


state 120:

	tyfields : ID COLON ID LBRACE . tyfieldsTail 

	COMMA	shift 124

	tyfieldsTail	goto 123

	.	reduce by rule 54

error:  state 121: shift/reduce conflict (shift OR, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift AND, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift GE, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift GT, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift LE, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift LT, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift NEQ, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift EQ, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift DIVIDE, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift TIMES, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift MINUS, reduce by rule 27)
error:  state 121: shift/reduce conflict (shift PLUS, reduce by rule 27)

state 121:

	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 
	control : FOR ID EQ exp TO exp DO exp .  (reduce by rule 27)

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 27


state 122:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 125
	lvalue	goto 8
	boolexp	goto 7
	compexp	goto 6
	mathexp	goto 5
	functionCall	goto 4
	control	goto 3
	assignment	goto 2
	sequence	goto 1

	.	error


state 123:

	tyfields : ID COLON ID LBRACE tyfieldsTail .  (reduce by rule 51)



	.	reduce by rule 51


state 124:

	tyfieldsTail : COMMA . ID COLON ID RBRACE tyfieldsTail 

	ID	shift 126


	.	error


state 125:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 58)
	boolexp : exp . AND exp 
	boolexp : exp . OR exp 
	compexp : exp . EQ exp 
	compexp : exp . NEQ exp 
	compexp : exp . LT exp 
	compexp : exp . LE exp 
	compexp : exp . GT exp 
	compexp : exp . GE exp 
	mathexp : exp . PLUS exp 
	mathexp : exp . MINUS exp 
	mathexp : exp . TIMES exp 
	mathexp : exp . DIVIDE exp 

	PLUS	shift 34
	MINUS	shift 33
	TIMES	shift 32
	DIVIDE	shift 31
	EQ	shift 30
	NEQ	shift 29
	LT	shift 28
	LE	shift 27
	GT	shift 26
	GE	shift 25
	AND	shift 24
	OR	shift 23


	.	reduce by rule 58


state 126:

	tyfieldsTail : COMMA ID . COLON ID RBRACE tyfieldsTail 

	COLON	shift 127


	.	error


state 127:

	tyfieldsTail : COMMA ID COLON . ID RBRACE tyfieldsTail 

	ID	shift 128


	.	error


state 128:

	tyfieldsTail : COMMA ID COLON ID . RBRACE tyfieldsTail 

	RBRACE	shift 129


	.	error


state 129:

	tyfieldsTail : COMMA ID COLON ID RBRACE . tyfieldsTail 

	COMMA	shift 124

	tyfieldsTail	goto 130

	.	reduce by rule 54


state 130:

	tyfieldsTail : COMMA ID COLON ID RBRACE tyfieldsTail .  (reduce by rule 53)



	.	reduce by rule 53


state 131:


	EOF	accept


	.	error

409 of 891 action table entries left after compaction
311 goto table entries
